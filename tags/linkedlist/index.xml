<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LinkedList on raoke007&#39;s blog</title>
    <link>http://localhost:1313/tags/linkedlist/</link>
    <description>Recent content in LinkedList on raoke007&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 17 Mar 2020 08:29:11 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/linkedlist/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeetCode-2-Add Two Numbers</title>
      <link>http://localhost:1313/post/leetcode-2-add-two-numbers/</link>
      <pubDate>Tue, 17 Mar 2020 08:29:11 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-2-add-two-numbers/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. You may assume the two numbers do not contain any leading zero, except</description>
    </item>
    
    <item>
      <title>LeetCode-94-Binary Tree Inorder Traversal</title>
      <link>http://localhost:1313/post/leetcode-94-binary-tree-inorder-traversal/</link>
      <pubDate>Wed, 11 Mar 2020 14:01:01 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-94-binary-tree-inorder-traversal/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 Given a binary tree, return the inorder traversal of its nodes&amp;#39; values. Example: Input: [1,null,2,3] 1 \ 2 / 3 Output: [1,3,2] 实现： 递归实现： 前提： 了解链表数据结构 了解递归概念 思路</description>
    </item>
    
    <item>
      <title>LeetCode-145-Binary Tree Postorder Traversal</title>
      <link>http://localhost:1313/post/leetcode-145-binary-tree-postorder-traversal/</link>
      <pubDate>Wed, 11 Mar 2020 13:50:52 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-145-binary-tree-postorder-traversal/</guid>
      <description>描述 难度：Hard 1 2 3 4 5 6 7 8 9 10 Given a binary tree, return the postorder traversal of its nodes&amp;#39; values. Example: Input: [1,null,2,3] 1 \ 2 / 3 Output: [3, 2, 1] 实现： 递归实现： 前提： 了解链表数据结构 了解递归概念 思路</description>
    </item>
    
    <item>
      <title>LeetCode-144-Binary Tree Preorder Traversal</title>
      <link>http://localhost:1313/post/leetcode-144-binary-tree-preorder-traversal/</link>
      <pubDate>Tue, 10 Mar 2020 14:51:17 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-144-binary-tree-preorder-traversal/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 Given a binary tree, return the preorder traversal of its nodes&amp;#39; values. Example: Input: [1,null,2,3] 1 \ 2 / 3 Output: [1,2,3] 实现： 递归实现： 前提： 了解链表数据结构 了解递归概念 思路</description>
    </item>
    
  </channel>
</rss>