<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recursion on raoke007&#39;s blog</title>
    <link>http://localhost:1313/tags/recursion/</link>
    <description>Recent content in Recursion on raoke007&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 30 Apr 2020 14:18:13 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/recursion/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeetCode-46-Permutations</title>
      <link>http://localhost:1313/post/leetcode-46-permutations/</link>
      <pubDate>Thu, 30 Apr 2020 14:18:13 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-46-permutations/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 11 12 13 Given a collection of distinct integers, return all possible permutations. Example: Input: [1,2,3] Output: [ [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1] ] 暴力实现法： 分析： 要获得所有组合，可以当做树形问</description>
    </item>
    
    <item>
      <title>LeetCode-17-Letter Combinations of a Phone Number</title>
      <link>http://localhost:1313/post/leetcode-17-letter-combinations-of-a-phone-number/</link>
      <pubDate>Thu, 23 Apr 2020 20:48:01 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-17-letter-combinations-of-a-phone-number/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters. Example: Input: &amp;#34;23&amp;#34; Output: [&amp;#34;ad&amp;#34;, &amp;#34;ae&amp;#34;, &amp;#34;af&amp;#34;,</description>
    </item>
    
    <item>
      <title>LeetCode-509-Fibonacci Number</title>
      <link>http://localhost:1313/post/leetcode-509-fibonacci-number/</link>
      <pubDate>Thu, 16 Apr 2020 19:08:43 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-509-fibonacci-number/</guid>
      <description>描述 难度：Easy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is, F(0) = 0, F(1) = 1 F(N) = F(N -</description>
    </item>
    
    <item>
      <title>LeetCode-2-Add Two Numbers</title>
      <link>http://localhost:1313/post/leetcode-2-add-two-numbers/</link>
      <pubDate>Tue, 17 Mar 2020 08:29:11 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-2-add-two-numbers/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. You may assume the two numbers do not contain any leading zero, except</description>
    </item>
    
    <item>
      <title>LeetCode-94-Binary Tree Inorder Traversal</title>
      <link>http://localhost:1313/post/leetcode-94-binary-tree-inorder-traversal/</link>
      <pubDate>Wed, 11 Mar 2020 14:01:01 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-94-binary-tree-inorder-traversal/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 Given a binary tree, return the inorder traversal of its nodes&amp;#39; values. Example: Input: [1,null,2,3] 1 \ 2 / 3 Output: [1,3,2] 实现： 递归实现： 前提： 了解链表数据结构 了解递归概念 思路</description>
    </item>
    
    <item>
      <title>LeetCode-145-Binary Tree Postorder Traversal</title>
      <link>http://localhost:1313/post/leetcode-145-binary-tree-postorder-traversal/</link>
      <pubDate>Wed, 11 Mar 2020 13:50:52 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-145-binary-tree-postorder-traversal/</guid>
      <description>描述 难度：Hard 1 2 3 4 5 6 7 8 9 10 Given a binary tree, return the postorder traversal of its nodes&amp;#39; values. Example: Input: [1,null,2,3] 1 \ 2 / 3 Output: [3, 2, 1] 实现： 递归实现： 前提： 了解链表数据结构 了解递归概念 思路</description>
    </item>
    
    <item>
      <title>LeetCode-144-Binary Tree Preorder Traversal</title>
      <link>http://localhost:1313/post/leetcode-144-binary-tree-preorder-traversal/</link>
      <pubDate>Tue, 10 Mar 2020 14:51:17 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-144-binary-tree-preorder-traversal/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 Given a binary tree, return the preorder traversal of its nodes&amp;#39; values. Example: Input: [1,null,2,3] 1 \ 2 / 3 Output: [1,2,3] 实现： 递归实现： 前提： 了解链表数据结构 了解递归概念 思路</description>
    </item>
    
  </channel>
</rss>