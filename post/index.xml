<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on raoke007&#39;s blog</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on raoke007&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 30 Apr 2020 14:18:13 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeetCode-46-Permutations</title>
      <link>http://localhost:1313/post/leetcode-46-permutations/</link>
      <pubDate>Thu, 30 Apr 2020 14:18:13 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-46-permutations/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 11 12 13 Given a collection of distinct integers, return all possible permutations. Example: Input: [1,2,3] Output: [ [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1] ] 暴力实现法： 分析： 要获得所有组合，可以当做树形问</description>
    </item>
    
    <item>
      <title>LeetCode-17-Letter Combinations of a Phone Number</title>
      <link>http://localhost:1313/post/leetcode-17-letter-combinations-of-a-phone-number/</link>
      <pubDate>Thu, 23 Apr 2020 20:48:01 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-17-letter-combinations-of-a-phone-number/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters. Example: Input: &amp;#34;23&amp;#34; Output: [&amp;#34;ad&amp;#34;, &amp;#34;ae&amp;#34;, &amp;#34;af&amp;#34;,</description>
    </item>
    
    <item>
      <title>LeetCode-70-Climbing Stairs</title>
      <link>http://localhost:1313/post/leetcode-70-climbing-stairs/</link>
      <pubDate>Thu, 16 Apr 2020 22:49:45 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-70-climbing-stairs/</guid>
      <description>描述 难度：Easy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 You are climbing a stair case. It takes n steps to reach to the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Note: Given n will be a</description>
    </item>
    
    <item>
      <title>LeetCode-509-Fibonacci Number</title>
      <link>http://localhost:1313/post/leetcode-509-fibonacci-number/</link>
      <pubDate>Thu, 16 Apr 2020 19:08:43 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-509-fibonacci-number/</guid>
      <description>描述 难度：Easy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is, F(0) = 0, F(1) = 1 F(N) = F(N -</description>
    </item>
    
    <item>
      <title>LeetCode-12-Integer to Roman【待优化】</title>
      <link>http://localhost:1313/post/leetcode-12-integer-to-roman/</link>
      <pubDate>Wed, 15 Apr 2020 09:59:26 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-12-integer-to-roman/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M. Symbol Value I 1 V 5</description>
    </item>
    
    <item>
      <title>LeetCode-4-Median of Two Sorted Arrays【待优化】</title>
      <link>http://localhost:1313/post/leetcode-4-median-of-two-sorted-arrays/</link>
      <pubDate>Tue, 07 Apr 2020 23:49:20 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-4-median-of-two-sorted-arrays/</guid>
      <description>描述 难度：Hard 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 There are two sorted arrays nums1 and nums2 of size m and n respectively. Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)). You may assume nums1 and nums2 cannot be both empty. Example 1: nums1</description>
    </item>
    
    <item>
      <title>Selection Sort【选择排序】</title>
      <link>http://localhost:1313/post/sort-selectionsort/</link>
      <pubDate>Tue, 31 Mar 2020 08:28:18 +0800</pubDate>
      
      <guid>http://localhost:1313/post/sort-selectionsort/</guid>
      <description>理解：给定一个数组，依次遍历它，每次遍历过程中，寻找 未排序部分 中最小/大值，最小/大值与未排序部分第一个元素交换位置。 问：什么是选择排序？ 答</description>
    </item>
    
    <item>
      <title>LeetCode-9-Palindrome Number【待优化】</title>
      <link>http://localhost:1313/post/leetcode-9-palindrome-number/</link>
      <pubDate>Sat, 28 Mar 2020 10:24:08 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-9-palindrome-number/</guid>
      <description>描述 难度：Easy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward. Example 1: Input: 121 Output: true Example 2: Input: -121 Output: false Explanation: From left to right, it reads -121. From right to</description>
    </item>
    
    <item>
      <title>LeetCode-23-Merge K Sorted Lists【待优化】</title>
      <link>http://localhost:1313/post/leetcode-23-merge-k-sorted-lists/</link>
      <pubDate>Fri, 27 Mar 2020 10:16:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-23-merge-k-sorted-lists/</guid>
      <description>描述 难度：Hard 1 2 3 4 5 6 7 8 9 10 Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity. Example: Input: [ 1-&amp;gt;4-&amp;gt;5, 1-&amp;gt;3-&amp;gt;4, 2-&amp;gt;6 ] Output: 1-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;4-&amp;gt;5-&amp;gt;6 暴力实现法 思路： 遍历ListNode集合，每次获得</description>
    </item>
    
    <item>
      <title>LeetCode-21-Merge Two Sorted Lists</title>
      <link>http://localhost:1313/post/leetcode-21-merge-two-sorted-lists/</link>
      <pubDate>Fri, 27 Mar 2020 08:05:32 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-21-merge-two-sorted-lists/</guid>
      <description>描述 难度：Easy 1 2 3 4 5 Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists. Example: Input: 1-&amp;gt;2-&amp;gt;4, 1-&amp;gt;3-&amp;gt;4 Output: 1-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;4 暴力实现法 思路： 使用List存储两个链表数据</description>
    </item>
    
    <item>
      <title>LeetCode-19-Remove Nth Node From End of List</title>
      <link>http://localhost:1313/post/leetcode-19-remove-nth-node-from-end-of-list/</link>
      <pubDate>Thu, 26 Mar 2020 17:23:03 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-19-remove-nth-node-from-end-of-list/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 11 12 Given a linked list, remove the n-th node from the end of list and return its head. Example: Given linked list: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5, and n = 2. After removing the second node from the end, the linked list becomes 1-&amp;gt;2-&amp;gt;3-&amp;gt;5. Note: Given n will always be valid. Follow</description>
    </item>
    
    <item>
      <title>LeetCode-11-Container With Most Water【待优化】</title>
      <link>http://localhost:1313/post/leetcode-11-container-with-most-water/</link>
      <pubDate>Tue, 24 Mar 2020 17:04:18 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-11-container-with-most-water/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container</description>
    </item>
    
    <item>
      <title>LeetCode-3-Longest Substring Without Repeating Characters【待优化】</title>
      <link>http://localhost:1313/post/leetcode-3-longest-substring-without-repeating-characters/</link>
      <pubDate>Mon, 23 Mar 2020 19:49:19 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-3-longest-substring-without-repeating-characters/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Given a string, find the length of the longest substring without repeating characters. Example 1: Input: &amp;#34;abcabcbb&amp;#34; Output: 3 Explanation: The answer is &amp;#34;abc&amp;#34;, with the length of 3. Example 2: Input: &amp;#34;bbbbb&amp;#34; Output: 1 Explanation: The answer is &amp;#34;b&amp;#34;, with the length</description>
    </item>
    
    <item>
      <title>LeetCode-7-Reverse Integer【待优化】</title>
      <link>http://localhost:1313/post/leetcode-7-reverse-integer/</link>
      <pubDate>Sat, 21 Mar 2020 23:03:05 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-7-reverse-integer/</guid>
      <description>描述 难度：Easy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Given a 32-bit signed integer, reverse digits of an integer. Example 1: Input: 123 Output: 321 Example 2: Input: -123 Output: -321 Example 3: Input: 120 Output: 21 Note: Assume we are dealing with an environment which could only store integers within the 32-bit signed</description>
    </item>
    
    <item>
      <title>LeetCode-2-Add Two Numbers</title>
      <link>http://localhost:1313/post/leetcode-2-add-two-numbers/</link>
      <pubDate>Tue, 17 Mar 2020 08:29:11 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-2-add-two-numbers/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. You may assume the two numbers do not contain any leading zero, except</description>
    </item>
    
    <item>
      <title>LeetCode-173-Binary Search Tree Iterator</title>
      <link>http://localhost:1313/post/leetcode-173-binary-search-tree-iterator/</link>
      <pubDate>Fri, 13 Mar 2020 15:57:14 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-173-binary-search-tree-iterator/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST. Calling next() will return the next smallest number in the BST. Example: 7</description>
    </item>
    
    <item>
      <title>LeetCode-71-Simplify Path</title>
      <link>http://localhost:1313/post/leetcode-71-simplify-path/</link>
      <pubDate>Thu, 12 Mar 2020 16:51:43 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-71-simplify-path/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 Given an absolute path for a file (Unix-style), simplify it. Or in other words, convert it to the canonical path. In a UNIX-style file system, a period . refers to the current</description>
    </item>
    
    <item>
      <title>LeetCode-94-Binary Tree Inorder Traversal</title>
      <link>http://localhost:1313/post/leetcode-94-binary-tree-inorder-traversal/</link>
      <pubDate>Wed, 11 Mar 2020 14:01:01 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-94-binary-tree-inorder-traversal/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 Given a binary tree, return the inorder traversal of its nodes&amp;#39; values. Example: Input: [1,null,2,3] 1 \ 2 / 3 Output: [1,3,2] 实现： 递归实现： 前提： 了解链表数据结构 了解递归概念 思路</description>
    </item>
    
    <item>
      <title>LeetCode-145-Binary Tree Postorder Traversal</title>
      <link>http://localhost:1313/post/leetcode-145-binary-tree-postorder-traversal/</link>
      <pubDate>Wed, 11 Mar 2020 13:50:52 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-145-binary-tree-postorder-traversal/</guid>
      <description>描述 难度：Hard 1 2 3 4 5 6 7 8 9 10 Given a binary tree, return the postorder traversal of its nodes&amp;#39; values. Example: Input: [1,null,2,3] 1 \ 2 / 3 Output: [3, 2, 1] 实现： 递归实现： 前提： 了解链表数据结构 了解递归概念 思路</description>
    </item>
    
    <item>
      <title>LeetCode-144-Binary Tree Preorder Traversal</title>
      <link>http://localhost:1313/post/leetcode-144-binary-tree-preorder-traversal/</link>
      <pubDate>Tue, 10 Mar 2020 14:51:17 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-144-binary-tree-preorder-traversal/</guid>
      <description>描述 难度：Medium 1 2 3 4 5 6 7 8 9 10 Given a binary tree, return the preorder traversal of its nodes&amp;#39; values. Example: Input: [1,null,2,3] 1 \ 2 / 3 Output: [1,2,3] 实现： 递归实现： 前提： 了解链表数据结构 了解递归概念 思路</description>
    </item>
    
    <item>
      <title>LeetCode-20-Valid Parentheses</title>
      <link>http://localhost:1313/post/leetcode-20-valid-parentheses/</link>
      <pubDate>Tue, 10 Mar 2020 13:53:10 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-20-valid-parentheses/</guid>
      <description>描述 难度：Easy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 Given a string containing just the characters &amp;#39;(&amp;#39;, &amp;#39;)&amp;#39;, &amp;#39;{&amp;#39;, &amp;#39;}&amp;#39;, &amp;#39;[&amp;#39; and &amp;#39;]&amp;#39;, determine if the input string is valid. An input string is valid if: 1. Open brackets must be closed by the same type of</description>
    </item>
    
    <item>
      <title>LeetCode-1-Two Sum</title>
      <link>http://localhost:1313/post/leetcode-1-two-sum/</link>
      <pubDate>Tue, 10 Mar 2020 09:33:37 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode-1-two-sum/</guid>
      <description>描述 难度：Easy 1 2 3 4 5 6 7 8 9 Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice. Example: Given nums = [2, 7, 11, 15], target = 9, Because</description>
    </item>
    
  </channel>
</rss>